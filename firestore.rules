
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(resource) {
      return request.auth.uid == resource.data.userId;
    }

    function isCollaborator(resource) {
      return request.auth.token.email in resource.data.collaborators;
    }
    
    function isInvited(resource) {
      return request.auth.token.email in resource.data.pendingCollaborators;
    }

    match /events/{eventId} {
      allow read: if request.auth != null && (isOwner(resource) || isCollaborator(resource) || isInvited(resource));
      allow create: if request.auth != null;
      allow update: if request.auth != null && (isOwner(resource) || isCollaborator(resource) || isInvited(resource));
      allow delete: if request.auth != null && isOwner(resource);
    }
    
    // Allow list queries for authenticated users, filtered by the client.
    match /events/{eventId} {
      allow list: if request.auth != null;
    }
  }
}
