
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /events/{eventId} {
      
      function isOwner() {
        return request.auth.uid == resource.data.userId;
      }
      
      function isCollaborator() {
        return request.auth.token.email in resource.data.collaborators;
      }

      function isInvited() {
        return request.auth.token.email in resource.data.pendingCollaborators;
      }

      function isAccepting() {
        // Allow if user is adding themselves to collaborators
        return request.resource.data.collaborators == resource.data.collaborators.concat([request.auth.token.email]);
      }
      
      function isDeclining() {
        // Allow if user is removing themselves from pending
        return request.resource.data.pendingCollaborators == resource.data.pendingCollaborators.diff([request.auth.token.email]);
      }

      allow read: if request.auth != null && (isOwner() || isCollaborator() || isInvited());

      allow create: if request.auth != null;

      allow delete: if request.auth != null && isOwner();

      allow update: if request.auth != null && (
        isOwner() || 
        (isInvited() && (isAccepting() || isDeclining()))
      );
    }
  }
}

    